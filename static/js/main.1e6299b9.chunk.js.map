{"version":3,"sources":["images/logo.png","serviceWorker.js","components/buttonMenu/ButtonMenu.jsx","components/header/Header.jsx","components/sidebar/Sidebar.jsx","components/Main/Main.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","ButtonMenu","props","className","onClick","click","Header","style","textDecoration","src","logo","height","class","Sidebar","sidebar","showSidebar","href","Main","useState","setSidebar","left","setLeft","console","log","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oLAAAA,EAAOC,QAAU,IAA0B,kC,4HCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBCPSC,G,MARI,SAACC,GAChB,OACI,4BAAQC,UAAU,cAAcC,QAASF,EAAMG,OAC3C,uBAAGF,UAAU,mB,wBCgBVG,EAhBA,SAACJ,GACZ,OACI,yBAAKC,UAAU,kBACX,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAYE,MAAOH,EAAMG,QACzB,yBAAKF,UAAU,QACX,kBAAC,IAAD,CAAMA,UAAU,YAAYI,MAAO,CAACC,eAAe,SAAS,yBAAKC,IAAKC,IAAMH,MAAO,CAACI,OAAO,YAE/F,yBAAKR,UAAU,6BACX,kBAAC,IAAD,CAAMA,UAAU,YAAYI,MAAO,CAACC,eAAe,SAAS,uBAAGI,MAAM,qBAArE,e,6CC6DLC,EA9DC,SAACX,GAEb,OACI,yBAAKC,UAAWD,EAAMY,QAAU,iBAAmB,WAC/C,4BACI,wBAAIP,MAAO,CAACI,OAAO,SACf,kBAAC,EAAD,CAAYN,MAAOH,EAAMa,cACzB,yBAAKZ,UAAU,QACf,uBAAGA,UAAU,YAAYI,MAAO,CAACC,eAAe,SAAS,yBAAKC,IAAKC,SAGvE,4BAEI,uBAAGM,KAAK,IAAG,kBAAC,IAAD,CAAeb,UAAU,UAApC,SAEJ,4BACI,2CAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAAuBb,UAAU,UAA5C,YAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAAWb,UAAU,UAAhC,WAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAAqBb,UAAU,UAA1C,UAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAAkBb,UAAU,UAAvC,WAEJ,4BACI,iDAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAASb,UAAU,UAA9B,aAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAASb,UAAU,UAA9B,cAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAASb,UAAU,UAA9B,gBAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAAQb,UAAU,UAA7B,cAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAAcb,UAAU,UAAnC,aAEJ,4BACI,2CAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAAiBb,UAAU,UAAtC,SAEJ,4BACI,uBAAGa,KAAK,IAAG,kBAAC,IAAD,CAAgBb,UAAU,UAArC,aC3CLc,G,MAnBF,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACRJ,EADQ,KACAK,EADA,OAEQD,oBAAS,GAFjB,mBAERE,EAFQ,KAEHC,EAFG,KAGfC,QAAQC,IAAIH,GAEZ,IAAML,EAAc,WAChBI,GAAYL,GACZO,GAASD,IAEb,OACI,yBAAKb,MAAO,CAACI,OAAO,SAChB,kBAAC,EAAD,CAAQN,MAAOU,IACf,kBAAC,EAAD,CAASD,QAASA,EAASC,YAAaA,IAChD,yBAAKZ,UAAWiB,EAAO,gBAAkB,YCb7CI,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,SLyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLb,QAAQa,MAAMA,EAAMC,c","file":"static/js/main.1e6299b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6c165586.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport './ButtonMenu.css'\n\nconst ButtonMenu = (props) => {\n    return (\n        <button className=\"button-menu\" onClick={props.click} >\n            <i className=\"fas fa-bars\"></i>\n        </button>\n      );\n}\n \nexport default ButtonMenu;","import React from 'react';\nimport {Link,BrowserRouter as Router} from 'react-router-dom'\nimport ButtonMenu from '../buttonMenu/ButtonMenu';\nimport './Header.css'\nimport logo from '../../images/logo.png'\n\nconst Header = (props) => {\n    return (  \n        <nav className=\"d-flex header \" >\n            <Router>\n                <ButtonMenu click={props.click}/>\n                <div className=\"logo\">\n                    <Link className=\"text-dark\" style={{textDecoration:'none'}}><img src={logo} style={{height:'43px'}}/></Link>\n                </div>\n                <div className=\"close-sesion ml-auto mr-5\" >\n                    <Link className=\"text-dark\" style={{textDecoration:'none'}}><i class=\"fas fa-user mr-2\"></i>Usuario</Link>\n                </div>\n            </Router>\n        </nav>\n    );\n}\n \nexport default Header;","import React from 'react'\nimport {Link,BrowserRouter as Router} from 'react-router-dom'\nimport './Sidebar.css'\nimport ButtonMenu from '../buttonMenu/ButtonMenu';\nimport { AiOutlineHome,AiOutlineShoppingCart,AiOutlineArrowRight,AiFillShopping } from 'react-icons/ai';\nimport { BsGraphUp} from 'react-icons/bs';\nimport { FaHandHoldingUsd,FaFileInvoiceDollar,FaBook,FaBookReader} from 'react-icons/fa';\nimport { FiUsers} from 'react-icons/fi';\nimport { RiBarChart2Fill} from 'react-icons/ri';\nimport logo from '../../images/logo.png'\n\n\n\n\nconst Sidebar = (props) =>{\n    \n    return(\n        <div className={props.sidebar ? \"sidebar active\" : \"sidebar\"}>\n            <ul >\n                <li style={{height:'56px'}}>\n                    <ButtonMenu click={props.showSidebar}/>\n                    <div className=\"logo\">\n                    <a className=\"text-dark\" style={{textDecoration:'none'}}><img src={logo} /></a>\n                    </div>\n                </li>\n                <li >\n                    \n                    <a href=\"\"><AiOutlineHome className=\"icons\"/>Home</a>\n                </li>\n                <li>\n                    <span>ACCIONES</span>\n                </li>\n                <li>\n                    <a href=\"\"><AiOutlineShoppingCart className=\"icons\"/>Compras</a>\n                </li>\n                <li>\n                    <a href=\"\"><BsGraphUp className=\"icons\"/>Ventas</a>\n                </li>\n                <li>\n                    <a href=\"\"><FaFileInvoiceDollar className=\"icons\"/>Pagos</a>\n                </li>\n                <li>\n                    <a href=\"\"><FaHandHoldingUsd className=\"icons\"/>Cobros</a>\n                </li>\n                <li>\n                    <span>ADMINISTRACION</span>\n                </li>\n                <li>\n                    <a href=\"\"><FiUsers className=\"icons\"/>Usuarios</a>\n                </li>\n                <li>\n                    <a href=\"\"><FiUsers className=\"icons\"/>Empleados</a>\n                </li>\n                <li>\n                    <a href=\"\"><FiUsers className=\"icons\"/>Proveedores</a>\n                </li>\n                <li>\n                    <a href=\"\"><FaBook className=\"icons\"/>Productos</a>\n                </li>\n                <li>\n                    <a href=\"\"><FaBookReader className=\"icons\"/>Clientes</a>\n                </li>\n                <li>\n                    <span>REPORTES</span>\n                </li>\n                <li>\n                    <a href=\"\"><RiBarChart2Fill className=\"icons\"/>Caja</a>\n                </li>\n                <li>\n                    <a href=\"\"><AiFillShopping className=\"icons\"/>Stock</a>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Sidebar","import React,{useState} from 'react';\nimport Header from '../header/Header';\nimport Sidebar from '../sidebar/Sidebar';\nimport '../Main/Main.css'\nimport logo from '../../images/logo.png'\n\n\nconst Main = () => {\n    const [sidebar,setSidebar] = useState(false);\n    const [left,setLeft] = useState(false);\n    console.log(left);\n\n    const showSidebar = () => {\n        setSidebar(!sidebar);\n        setLeft(!left);\n    }\n    return (\n        <div style={{height:'100%'}}>\n            <Header click={showSidebar}/>\n            <Sidebar sidebar={sidebar} showSidebar={showSidebar}/>\n    <div className={left ? \"main activate\" : \"main\"}></div>\n\n        </div>\n      );\n}\n \nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Main from './components/Main/Main'\n\n\nReactDOM.render(\n  <Main/>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}